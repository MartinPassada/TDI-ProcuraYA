--Base de datos--

Mongo DB es una base de datos no relacional orientada o documentos, que permite el modelo de datos embebidos para imitar las relaciones de una BD relacional. 

Razones de la elección

*Cuenta con la ventaja de no necesitar mantener una integridad de datos estricta

*Permite la escalabilidad horizontalmente

*Es mas util en casos donde no se necesite cruzar muchos datos, o muchas operaciones en el motor de la BD, en caso necesario se pueden realizar con logica en código en el servidor.

*Uno de los integrantes cuenta con cierta experiencia en consultas noSQL

--Arquitectura servidor--

NodeJS (basado en Javascript)

Es un entorno de ejecucion de javascript, que permite la ejecucion de javascript fuera del navegador. Permite al usuario necesitar menos hardware para atender muchas peticiones.

Razones de la elección

*Se basa en javascript, al igual que React, mantenemos el mismo lenguaje de punta a punta.

*En PHP cada peticion abre un hilo nuevo utilizando mas memoria y recursos, en cambio en node, en vez de generar un nuevo hilo y asignarle recursos, dispara una ejecución de un evento denttro del proceso del motor de node.

*No permite bloqueos por lo que nunca se queda en un punto muerto

*Como javascript es mononucleo, no es recomendable para tareas que exijan mucha potencia de computo Server-side (ej: codificacion y decodificacion de video en tiempo real para streaming), es mas situado para manejar muchas peticiones pero de menor complejidad, como por ejemplo documentos, texto, strings... expedientes judiciales.


-------------------

En la carpeta "diseño" se encuentran screenshots de la arquitectura, asi como un modelo (expandible a futuro) relacional de la BD y su ejemplo de pasaje a noSQL. Tambien se pueden ver screenshots de las pantallas, asi como la evolucion del diseño de una en especial que salió horrible jaja.

Faltan las screenshots de los 2 formularios, Registro y Login, los cuales cuentan ya con las validaciones correspondientes en el Cliente (validaciones Client-side)

Tambien se puede observar en el repositorio el historial de commits justificando el trabajo colaborativo asi como el aprendizaje adquirido en Git y React (tecnologias aprendidas desde 0 para este proyecto)

A excepcion del home, que no esta terminada, mas que nada porque se cargarian los expedientes provenientes del inexistente Backend, cabe destacar que las pantallas ya estan programadas y linkeadas, con cierta logica mínima.

Se puede realizar una demo si le interesa a travez de discord para justificar funcionalidad (si mi conexion de subida se la banca).








